# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-20 20:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen_name', models.CharField(max_length=1000, verbose_name='Name of Allergen')),
                ('reaction', models.CharField(max_length=1000, verbose_name='Reaction')),
                ('severity', models.CharField(max_length=1000, verbose_name='Severity')),
                ('allergen_type', models.CharField(choices=[('Drug', 'Drug'), ('Other', 'Other')], max_length=1000, verbose_name='Allergen Type')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.CharField(max_length=1000, verbose_name='Disease')),
                ('relationship', models.CharField(max_length=1000, verbose_name='Relationship')),
                ('details', models.CharField(max_length=1000, verbose_name='Details')),
                ('status', models.CharField(max_length=100, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=1000, verbose_name='Medication Name')),
                ('date_started', models.DateField(null=True, verbose_name='Date Started')),
                ('dosage_form', models.CharField(max_length=100, verbose_name='Dosage Form')),
                ('strength', models.CharField(max_length=1000, verbose_name='Strength')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('credit', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Surgery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_name', models.CharField(max_length=1000, verbose_name='Name of Procedure')),
                ('date', models.DateField(verbose_name='Date')),
                ('surgeon_name', models.CharField(max_length=1000, verbose_name='Name of Surgeon')),
            ],
        ),
        migrations.CreateModel(
            name='HealthHistory',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='patients.Patient')),
                ('primary_care_physician', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Primary Care Physician')),
                ('last_visit', models.DateField(blank=True, null=True, verbose_name='Date of last visit (MM/DD/YYY)')),
                ('is_work_at_computer', models.BooleanField(default=False, verbose_name='Do you work at a computer?')),
                ('hours_per_day', models.FloatField(blank=True, null=True, verbose_name='If yes, how many hours per day?')),
                ('is_kidney_disease', models.BooleanField(default=False, verbose_name='Kidney Disease')),
                ('is_venereal_disease', models.BooleanField(default=False, verbose_name='Venereal Disease')),
                ('is_diabetes', models.BooleanField(default=False, verbose_name='Diabetes')),
                ('is_thyroid_problems', models.BooleanField(default=False, verbose_name='Thyroid Problems')),
                ('is_skin_disease', models.BooleanField(default=False, verbose_name='Skin Disease')),
                ('is_eyeProblems', models.BooleanField(default=False, verbose_name='Eye Problems')),
                ('is_arthritis', models.BooleanField(default=False, verbose_name='Arthritis')),
                ('is_epilepsy', models.BooleanField(default=False, verbose_name='Epilepsy')),
                ('is_nervous_disorders', models.BooleanField(default=False, verbose_name='Nervous Disorders')),
                ('is_mental_illness', models.BooleanField(default=False, verbose_name='Mental Illness')),
                ('is_frequent_headaches', models.BooleanField(default=False, verbose_name='Frequency Headaches')),
                ('is_earaches', models.BooleanField(default=False, verbose_name='Ear Aches')),
                ('is_hay_fever', models.BooleanField(default=False, verbose_name='Hay Fever')),
                ('is_asthma', models.BooleanField(default=False, verbose_name='Asthma')),
                ('is_sleep_apnea', models.BooleanField(default=False, verbose_name='Sleep Apnea')),
                ('is_tumor_treatment', models.BooleanField(default=False, verbose_name='Tumor Treatment')),
                ('is_hivaids', models.BooleanField(default=False, verbose_name='HIV / AIDS')),
                ('is_aids_Virus_carrier', models.BooleanField(default=False, verbose_name='AIDS Virus Carrier')),
                ('is_joints_hip_replacement', models.BooleanField(default=False, verbose_name='Hip Joint Replacement')),
                ('is_recent_change_weight', models.BooleanField(default=False, verbose_name='Recent Weight Change')),
                ('is_pregnant', models.BooleanField(default=False, verbose_name='Pregnant')),
                ('is_birth_control_pill', models.BooleanField(default=False, verbose_name='Birth Control Pills')),
                ('is_premedications', models.BooleanField(default=False, verbose_name='Premedications')),
                ('is_rheumatismal_fever', models.BooleanField(default=False, verbose_name='Rheumatismal Fever')),
                ('is_fever', models.BooleanField(default=False, verbose_name='Fever')),
                ('is_bleeding', models.BooleanField(default=False, verbose_name='Bleeding')),
                ('is_anemia', models.BooleanField(default=False, verbose_name='Anemia')),
                ('is_osteoporosis', models.BooleanField(default=False, verbose_name='Osteoporosis')),
                ('is_frequentColds', models.BooleanField(default=False, verbose_name='Frequent Colds')),
                ('is_frequent_sinusitis', models.BooleanField(default=False, verbose_name='Frequent Sinusitis')),
                ('is_lungProblems', models.BooleanField(default=False, verbose_name='Lung Problems')),
                ('is_tuberculosis', models.BooleanField(default=False, verbose_name='Tuberculosis')),
                ('is_digestive_problems', models.BooleanField(default=False, verbose_name='Digestive Problems')),
                ('is_stomach_ulcers', models.BooleanField(default=False, verbose_name='Stomach Ulcers')),
                ('is_liver_disease', models.BooleanField(default=False, verbose_name='Liver Disease')),
                ('is_hepatitis', models.BooleanField(default=False, verbose_name='Hepatisis')),
                ('is_dental_fear', models.BooleanField(default=False, verbose_name='Fear of Dental Treatment')),
                ('is_additional_conerns', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Additional Concerns')),
                ('is_smoker', models.BooleanField(default=False, verbose_name='Do you smoke?')),
                ('is_drinker', models.BooleanField(default=False, verbose_name='Do you drink alcohol?')),
            ],
        ),
        migrations.CreateModel(
            name='PatientInformation',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='info', serialize=False, to='patients.Patient')),
                ('first_name', models.CharField(max_length=1000, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=1000, verbose_name='Last Name')),
                ('insurance_policy_number', models.CharField(max_length=100, verbose_name='Insurance Policy Number')),
                ('insurance_group_number', models.CharField(max_length=100, verbose_name='Insurance Group Number')),
                ('address', models.CharField(max_length=1000, verbose_name='Address')),
                ('city', models.CharField(max_length=1000, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('zipcode', models.CharField(max_length=7, verbose_name='Zip Code')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth (MM/DD/YYYY)')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('alternative_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Alternative Phone')),
                ('contact_first_name', models.CharField(max_length=1000, verbose_name='Emergency Contact First Name')),
                ('contact_last_name', models.CharField(max_length=1000, verbose_name='Emergency Contact Last Name')),
                ('relationship', models.CharField(max_length=1000, verbose_name='Relationship')),
                ('contact_phone', models.CharField(max_length=1000, verbose_name='Emergency Contact Phone Number')),
                ('contact_alternative_phone', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Emergency Contact Alternative Phone')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Emergency Contact Email Address')),
                ('policy_relationship', models.CharField(blank=True, choices=[('Self', 'Self'), ('Other', 'Other')], max_length=1000, null=True, verbose_name='Relationship to Policy Holder')),
                ('policyholder_fist_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='If Other, Policy Holder First Name')),
                ('policyholder_last_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='If Other, Policy Holder Last Name`')),
                ('policyholder_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True, verbose_name='If Other, Policy Holder Gender')),
                ('policyholder_dob', models.DateField(blank=True, null=True, verbose_name='If Other, Policy Holder Date of Birth (MM/DD/YYYY)')),
                ('policyholder_employer', models.CharField(blank=True, max_length=1000, null=True, verbose_name='If Other, Policy Holder Employers')),
                ('policyholder_address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='If Other, Policy Holder Address')),
            ],
        ),
        migrations.AddField(
            model_name='surgery',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Patient'),
        ),
    ]
